Angular 
-------

npm - Node Package Manager/Module

version --  npm -v 

install
   
   sudo npm i -g @angular/cli@latest
version -- ng version


project creation
   -ng new projectname


running command
    -ng serve --open          ng s -o (short)


Angular Technologies
-html
-css
-typeScript   --variable are strictly typed which means variable type should be specified


transpiling -- the process of converting ts to js because browser have no engine for running ts.

install node modules --   npm i

.gitignore -- used to ignore files while pushing

angular.json --  configuration between angular project and angular CLI 

pakcage.json -- used to manage third party libraries 

tsconfig files -- configuration between ts code and project

node_modules -- store copies of node files 

assets -- store media files for project

-root module 
      -root component
          -we can create sub components inside the root module 
      
      -sub modules
           -components
      
module -ts file  manage all the components inside that module 

component  -  a component consists of ts html and css 
    -selector   - used to display the component 

@ are decorators. decorators are used to store meta data

meta data -- data inside data 



create new component 
      -ng generate component component_name
      -ng g c first 


index.js only works in root component
we can call other sub components in root Component

working cycle of angular component
----------------------------------

constructor --> ingOnInit --> other methods 

DATA BINDING IN ANGULAR 
-----------------------
ts - component
html - view


1.One Way Binding 
-----------------
 1.1 ts to html(component to view data sharing)

    1.1.1 string interpolation  -- {{}}
    1.1.2 property binding [property_name]="data"

 1.2 view to component  (html to ts)
   
     1.2.1 event binding (eventname)="method()"
     1.2.2 $event binding (eventname)="method($event)"  ==>
     1.2.3 event binding with template rendering variable    #variableName


2.Two Way Binding

  2.1 ngModel   [(ngModel)]="variable"
         -FormsModule  -module used to apply ngModel 


PATH SETTING IN ANGULAR
-----------------------

path set in root module routing file
each page need different paths 
landing page path is empty

REDIRECTION IN ANGULAR
----------------------

method - navigateByUrl(path)
class  - Router
module - AppRoutingModule



folder  - file - class - methods
pakcage   module

Dependency Injection
--------------------

to use a method of class in another class 

Dependency Injection is done inside constructor

        accessSpecifier reference:

        access specifier - private / public
        - private: can use the injecting class only in that class
        - public : can use the injecting class in other classes of that file



ANGULAR SERVICES
----------------
It is a file in angular 
All components can access the content of service file 

-create    ng g s filename  (ng generate service filename)
